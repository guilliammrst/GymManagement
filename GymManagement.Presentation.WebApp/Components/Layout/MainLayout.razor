@using GymManagement.Presentation.WebApp.ApiClients
@using GymManagement.Shared.Core.AuthManager
@inject AuthenticatedUser _authenticatedUser
@inherits LayoutComponentBase

<div class="page @(_authenticatedUser.IsAuthenticated ? "authenticated" : "unauthenticated")">
    <LoginRedirect/>
    
    @if (_authenticatedUser.IsAuthenticated)
    {
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-brand">
                <a href="/" class="brand-logo">
                    <span class="brand-icon">💪</span>
                    <span class="brand-text">GymManagement</span>
                </a>
            </div>
            <NavMenu />
        </aside>

        <!-- Main content -->
        <main class="main">
            <!-- Top bar -->
            <header class="top-row">
                <div class="top-row-left">
                    <button class="sidebar-toggle" type="button" onclick="toggleSidebar()">
                        ☰
                    </button>
                </div>
                
                <div class="top-row-actions">
                    <LogoutDisplay />
                </div>
            </header>

            <!-- Page content -->
            <article class="content">
                <div class="main-grid">
                    @Body
                </div>
            </article>
        </main>
        
        <!-- Mobile overlay -->
        <div class="sidebar-overlay" onclick="closeSidebar()"></div>
        
        <!-- Scroll indicator -->
        <div class="scroll-indicator"></div>
        
        <!-- Toast container -->
        <div class="toast-container" id="toastContainer"></div>
        
        <RadzenDialogLayout />
    }
    else
    {
        @Body
    }
</div>

<div id="blazor-error-ui">
    Une erreur inattendue s'est produite.
    <a href="" class="reload">Recharger</a>
    <a class="dismiss">🗙</a>
</div>

<script>
    // Gestion de la sidebar mobile
    function toggleSidebar() {
        const sidebar = document.querySelector('.sidebar');
        const overlay = document.querySelector('.sidebar-overlay');
        
        if (sidebar && overlay) {
            sidebar.classList.toggle('show');
            overlay.classList.toggle('show');
            
            // Empêcher le scroll du body quand la sidebar est ouverte
            if (sidebar.classList.contains('show')) {
                document.body.style.overflow = 'hidden';
            } else {
                document.body.style.overflow = '';
            }
        }
    }

    function closeSidebar() {
        const sidebar = document.querySelector('.sidebar');
        const overlay = document.querySelector('.sidebar-overlay');
        
        if (sidebar && overlay) {
            sidebar.classList.remove('show');
            overlay.classList.remove('show');
            document.body.style.overflow = '';
        }
    }

    // Initialisation après le chargement de la page
    document.addEventListener('DOMContentLoaded', function() {
        // Vérifier si l'utilisateur est authentifié avant d'ajouter les événements
        const sidebar = document.querySelector('.sidebar');
        if (!sidebar) return; // Pas d'authentification, pas de sidebar
        
        // Fermer la sidebar sur les liens de navigation (mobile)
        const navLinks = document.querySelectorAll('.nav-link');
        navLinks.forEach(link => {
            link.addEventListener('click', function() {
                if (window.innerWidth <= 1200) {
                    closeSidebar();
                }
            });
        });

        // Indicateur de scroll
        const scrollIndicator = document.querySelector('.scroll-indicator');
        if (scrollIndicator) {
            window.addEventListener('scroll', function() {
                const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
                const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
                const scrolled = height > 0 ? (winScroll / height) * 100 : 0;
                
                scrollIndicator.style.transform = `scaleX(${scrolled / 100})`;
            });
        }

        // Fermer la sidebar quand on clique en dehors (mobile)
        document.addEventListener('click', function(event) {
            const sidebarToggle = document.querySelector('.sidebar-toggle');
            
            if (window.innerWidth <= 1200 && 
                sidebar && sidebar.classList.contains('show') && 
                !sidebar.contains(event.target) && 
                sidebarToggle && !sidebarToggle.contains(event.target)) {
                closeSidebar();
            }
        });

        // Gestion du redimensionnement de la fenêtre
        window.addEventListener('resize', function() {
            if (window.innerWidth > 1200) {
                closeSidebar();
            }
        });
    });

    // Fonctions utilitaires pour les notifications toast
    window.showToast = function(message, type = 'info', duration = 5000) {
        const container = document.getElementById('toastContainer');
        if (!container) return;

        const toast = document.createElement('div');
        toast.className = `toast toast-${type}`;
        
        const icon = {
            success: '✅',
            error: '❌',
            warning: '⚠️',
            info: 'ℹ️'
        }[type] || 'ℹ️';

        toast.innerHTML = `
            <span style="font-size: 1.25rem;">${icon}</span>
            <span style="flex: 1;">${message}</span>
            <button onclick="this.parentElement.remove()" style="background: none; border: none; font-size: 1.25rem; cursor: pointer; opacity: 0.7; padding: 0; margin-left: 0.5rem;">×</button>
        `;

        container.appendChild(toast);

        // Auto-suppression après la durée spécifiée
        setTimeout(() => {
            if (toast.parentElement) {
                toast.style.animation = 'slideOutRight 0.4s ease-in forwards';
                setTimeout(() => toast.remove(), 400);
            }
        }, duration);
    };
</script>
