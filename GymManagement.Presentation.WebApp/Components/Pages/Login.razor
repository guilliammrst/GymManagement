@page "/login"
@using GymManagement.Presentation.WebApp.ApiClients

<PageTitle>Connexion - GymManagement</PageTitle>

<div class="login-div">
    <div class="login-card">
        <div class="login-header">
            <span class="login-logo">💪</span>
            <h1 class="login-title">GymManagement</h1>
            <p class="login-subtitle">Connectez-vous à votre espace de gestion</p>
        </div>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-message">
                @errorMessage
            </div>
        }

        <EditForm Model="_loginDto" OnValidSubmit="HandleLogin" FormName="Login" class="login-form">
            <DataAnnotationsValidator />
            
            <div class="form-group">
                <label for="email">📧 Adresse email</label>
                <InputText @bind-Value="_loginDto!.Email" 
                          id="email"
                          class="form-control" 
                          placeholder="votre.email@exemple.com"
                          autocomplete="email" />
                <ValidationMessage For="() => _loginDto.Email" />
            </div>
            
            <div class="form-group">
                <label for="password">🔒 Mot de passe</label>
                <InputText @bind-Value="_loginDto!.Password" 
                          type="password" 
                          id="password"
                          class="form-control" 
                          placeholder="Saisissez votre mot de passe"
                          autocomplete="current-password" />
                <ValidationMessage For="() => _loginDto.Password" />
            </div>
            
            <RadzenButton Text="Se connecter" 
                         Icon="login" 
                         ButtonStyle="ButtonStyle.Primary" 
                         type="submit"
                         class="login-button" />
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm(FormName = "Login")]
    private LoginDto _loginDto { get; set; } = new();

    private string errorMessage = "";

    private async Task HandleLogin()
    {
        errorMessage = "";
        
        var loginResult = await _authManager.Login(_loginDto);
        
        if (loginResult.Success)
        {
            _authManager.RedirectToHome();
        }
        else if (loginResult.Fault == GymFaultType.GetTokenFailed)
        {
            errorMessage = "Identifiants incorrects.";
        }
        else
        {
            errorMessage = "Vous n'avez pas les permissions.";
        }
    }
}
