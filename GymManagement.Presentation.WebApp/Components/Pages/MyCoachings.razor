@page "/my-coachings"
@rendermode InteractiveServer
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

<PageTitle>Mes coachings - GymManagement</PageTitle>

<div class="page-header">
    <div class="page-header-content">
        <div class="page-title-section">
            <h1 class="page-title">🎯 Mes coachings</h1>
            <p class="page-description">Consultez tous vos programmes de coaching en cours</p>
        </div>
    </div>
</div>

<div class="results-section">
    @if (coachings == null)
    {
        <div class="loading-state">
            <div class="loading-spinner">
                <div class="spinner"></div>
                <p>Chargement de vos coachings...</p>
            </div>
        </div>
    }
    else if (coachings.Count == 0)
    {
        <div class="empty-state">
            <div class="empty-state-content">
                <span class="empty-state-icon">🎯</span>
                <h3>Aucun coaching trouvé</h3>
                <p>Vous n'avez aucun programme de coaching actuel.</p>
            </div>
        </div>
    }
    else
    {
        <div class="results-header">
            <div class="results-info">
                <span class="results-count">@coachings.Count coachings actifs</span>
            </div>
        </div>
        
        <div class="my-coachings-grid">
            @foreach (var coaching in coachings)
            {
                <div class="my-coaching-card">
                    <div class="my-coaching-card-header">
                        <div class="my-coaching-icon">
                            <span class="my-coaching-icon-text">🎯</span>
                        </div>
                        <div class="my-coaching-basic-info">
                            <h4 class="my-coaching-name">Mon Coaching #@coaching.Id</h4>
                            <p class="my-coaching-period">@coaching.StartDate.ToString("dd/MM/yyyy") - @coaching.EndDate.ToString("dd/MM/yyyy")</p>
                        </div>
                    </div>
                    
                    <div class="my-coaching-card-body">
                        <div class="my-coaching-details">
                            <div class="detail-item">
                                <span class="detail-label">Début:</span>
                                <span class="detail-value">@coaching.StartDate.ToString("dd/MM/yyyy")</span>
                            </div>
                            <div class="detail-item">
                                <span class="detail-label">Fin:</span>
                                <span class="detail-value">@coaching.EndDate.ToString("dd/MM/yyyy")</span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="my-coaching-card-footer">
                        <NavLink href="@($"coaching/{coaching.Id}")" class="btn btn-primary btn-sm">
                            <span>📋</span> Détails
                        </NavLink>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private List<CoachingDto>? coachings;

    protected override async Task OnInitializedAsync()
    {
        await LoadCoachings();
    }

    private async Task LoadCoachings()
    {
        coachings = await _gymApiClient.GetCoachingsAsync(true);
    }
}
